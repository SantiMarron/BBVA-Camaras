<<<<<<< HEAD
select(AFILIACION, FACT_TDC, FACT_DEB)
##### Filtro de TD menor a CI e indicador de igualdad entre ajena y propia #####
Casos <- Comparacion_CI %>%
filter(Comp_CI_cred == "TD menor a CI" | Comp_CI_deb2 == "TD menor a CI") %>%
select(-GRUPO, -CADENA) %>%
rename(Tasa_cred_propia =`TASA DE DESCUENTO CRÉDITO PROPIA`,
Tasa_deb_propia =`TASA DE DESCUENTO DÉBITO PROPIA`) %>%
mutate_at(c("Tasa_cred_base", "Tasa_deb_base", "Tasa_cred_propia",
"Tasa_cred_ajena", "Tasa_deb_propia", "Tasa_deb_ajena",
"Cuota_deb2"), as.numeric) %>%
mutate(Ind_cred =
case_when(
(Tasa_cred_propia - Tasa_cred_ajena == 0) & is.na(Tasa_cred_base) ~ "Iguales",
Tasa_cred_propia == 0  & Tasa_cred_ajena == 0 & !is.na(Tasa_cred_base) ~ "Base",
(Tasa_cred_propia - Tasa_cred_ajena != 0) & is.na(Tasa_cred_base) ~ "Distintas"),
Ind_deb =
case_when(
Ind_cuota == "C" ~ "Cuota",
(Tasa_deb_propia - Tasa_deb_ajena == 0) & is.na(Tasa_deb_base) ~ "Iguales",
Tasa_deb_propia == 0  & Tasa_deb_ajena == 0 & !is.na(Tasa_deb_base) ~ "Base",
(Tasa_deb_propia - Tasa_deb_ajena != 0) & is.na(Tasa_deb_base) ~ "Distintas"))
##### Bases de casos para credito y para debito y listas de negocios en Excel #####
Llave_gpo_cad <- Comparacion_CI %>%
select(AFILIACION, GRUPO, CADENA, `RAZON SOCIAL`, GIRO)
Casos_cred <- Casos %>%
filter(Comp_CI_cred == "TD menor a CI") %>%
select(-Tasa_deb_base, -Tasa_deb_propia, -Tasa_deb_ajena, -Cuota_deb2, -Cuota_deb_CI,
-Comp_CI_deb2, -Ind_cuota, -Ind_deb) %>%
left_join(Llave_gpo_cad)
Casos_deb <- Casos %>%
filter(Comp_CI_deb2 == "TD menor a CI") %>%
select(-Tasa_cred_base, -Tasa_cred_propia, -Tasa_cred_ajena, -CI_cred,
-Comp_CI_cred, -Ind_cred) %>%
left_join(Llave_gpo_cad)
a <- Casos_cred %>% distinct(AFILIACION, GRUPO, CADENA, `RAZON SOCIAL`, GIRO)
b <- Casos_deb %>% distinct(AFILIACION, GRUPO, CADENA, `RAZON SOCIAL`, GIRO)
View(Casos_deb)
unique(Casos_deb$Ind_deb)
Casos_cred$Ind_cred
unique(Casos_cred$Ind_cred)
glimpse(Casos_cred)
Cred_cero <- Casos_cred %>%
mutate(Ind =
case_when(Ind_Cred == 'Base' & Tasa_cred_base == 0 ~ 1,
Ind_cred == 'Iguales' & Tasa_cred_ajena == 0 ~ 1,
TRUE ~ 0)) %>%
filter(Ind_cred == 0)
Cred_cero <- Casos_cred %>%
mutate(Ind =
case_when(Ind_Cred == 'Base' & Tasa_cred_base == 0 ~ 1,
Ind_cred == 'Iguales' & Tasa_cred_ajena == 0 ~ 1,
TRUE ~ 0)) %>%
filter(Ind == 1)
Cred_cero <- Casos_cred %>%
mutate(Ind =
case_when(Ind_cred == 'Base' & Tasa_cred_base == 0 ~ 1,
Ind_cred == 'Iguales' & Tasa_cred_ajena == 0 ~ 1,
TRUE ~ 0)) %>%
filter(Ind == 1)
View(Cred_cero)
Cred_cero <- Casos_cred %>%
mutate(Ind =
case_when(Ind_cred == 'Base' & Tasa_cred_base == 0 ~ 1,
Ind_cred == 'Iguales' & Tasa_cred_ajena == 0 ~ 1,
TRUE ~ 0)) %>%
filter(Ind == 1) %>%
select(-CI_deb, -Ind_cred, -Ind)
View(Cred_cero)
# BBVA Competencia Camaras (ult. act 2 junio 2020)
# Revision de casos con cuotas en pesos aunque debieran ser %, por derechos adquiridos (restaurantes, etc)
gc()
library(tidyverse)
library(readxl)
library(xlsx)
##### Lectura de bases de datos #####
source <- function(f, encoding = 'UTF-8') { # Para que el source si lea acentos y caracteres raros
l <- readLines(f, encoding=encoding)
eval(parse(text=l),envir=.GlobalEnv)
}
source("Codigos/Revision negocios caso especifico en que tasas descto menor a CI.R")
rm(list=setdiff(ls(), "Comparacion_CI"))
Der_adquiridos <- read_excel("Inputs/Lista Derechos Adquiridos_con tasas de intercambio_2019_3.xlsx",
range = "A3:G48")
Total_liquidacion <- read_excel("Inputs/Total_liquidacion.xlsx", sheet = "Total", skip = 4) %>%
rename(AJE_CRED_TXS_TOT = TXNS...1, AJE_CRED_VAL_TOT = MONTO...2,
AJE_DEB_TXS_TOT = TXNS...5, AJE_DEB_VAL_TOT = MONTO...6)
Entregada <- read_excel("Inputs/124_vi_2019_10.xlsx") %>%
rename(AFILIACION = AFILIACION_NUM,
Tasa_cred = `TASA CRED`,
Tasa_deb = `TASA DEB`,
Cuota_deb = `CUOT DEB`) %>%
mutate_at(c("Tasa_cred", "Tasa_deb", "Cuota_deb", "FACT_TDC", "FACT_DEB"), as.numeric) %>%
select(AFILIACION, FACT_TDC, FACT_DEB)
##### Procesamiento de bases para union #####
Casos_aplicables <- Comparacion_CI %>%
filter(Comp_CI_deb2 == "No aplica") %>%
select(AFILIACION, `RAZON SOCIAL`, GRUPO, CADENA, GIRO, Cuota_deb2, Ind_cuota, Cuota_deb_CI, CI_deb)
Der_proc <- Der_adquiridos %>%
mutate(GRUPO = case_when(str_length(GRUPO) == 1 ~ str_c("00000", GRUPO),
str_length(GRUPO) == 2 ~ str_c("0000", GRUPO),
str_length(GRUPO) == 3 ~ str_c("000", GRUPO),
str_length(GRUPO) == 4 ~ str_c("00", GRUPO)),
CADENA = case_when(str_length(CADENA) == 1 ~ str_c("00000", CADENA),
str_length(CADENA) == 2 ~ str_c("0000", CADENA))) %>%
select(-`Categoría Crédito`)
##### Union de bases #####
Unidas <- Casos_aplicables %>%
left_join(Der_proc)
Neg_c_derechos <- Unidas %>%
filter(!is.na(NOMBRE)) # Si cuadra, aqui estan Toks y Sanborns, los importantes
print(nrow(Neg_c_derechos)/nrow(Casos_aplicables)) # % de registros con derechos adquiridos que se explican
Resto <- Unidas %>%
filter(is.na(NOMBRE)) %>%
select(-NOMBRE, -`Intercambio Créd`, -`Cuota Débito`, -Ind_cuota) # Si cuadra, desde el Input dice que Vips no
write.xlsx2(as.data.frame(Resto), "Outputs/Negocios atipicos-TD en pesos (cuota)-CI en tasa.xlsx",
sheetName = "Lista", row.names = F, append = F)
##### Porcentaje de facturacion #####
Fact <- Resto %>%
left_join(Entregada) %>%
filter(!is.na(FACT_DEB))
print(sum(Fact$FACT_DEB)/sum(Entregada$FACT_DEB))
# BBVA Competencia Camaras (ult. act 2 junio 2020)
# Revision de casos con cuotas en pesos aunque debieran ser %, por derechos adquiridos (restaurantes, etc)
gc()
library(tidyverse)
library(readxl)
library(xlsx)
##### Lectura de bases de datos #####
source <- function(f, encoding = 'UTF-8') { # Para que el source si lea acentos y caracteres raros
l <- readLines(f, encoding=encoding)
eval(parse(text=l),envir=.GlobalEnv)
}
source("Codigos/Revision negocios caso especifico en que tasas descto menor a CI.R")
rm(list=setdiff(ls(), "Comparacion_CI"))
Der_adquiridos <- read_excel("Inputs/Lista Derechos Adquiridos_con tasas de intercambio_2019_3.xlsx",
range = "A3:G48")
Entregada <- read_excel("Inputs/124_vi_2019_10.xlsx") %>%
rename(AFILIACION = AFILIACION_NUM,
Tasa_cred = `TASA CRED`,
Tasa_deb = `TASA DEB`,
Cuota_deb = `CUOT DEB`) %>%
mutate_at(c("Tasa_cred", "Tasa_deb", "Cuota_deb", "FACT_TDC", "FACT_DEB"), as.numeric) %>%
select(AFILIACION, FACT_TDC, FACT_DEB)
##### Procesamiento de bases para union #####
Casos_aplicables <- Comparacion_CI %>%
filter(Comp_CI_deb2 == "No aplica") %>%
select(AFILIACION, `RAZON SOCIAL`, GRUPO, CADENA, GIRO, Cuota_deb2, Ind_cuota, Cuota_deb_CI, CI_deb)
Der_proc <- Der_adquiridos %>%
mutate(GRUPO = case_when(str_length(GRUPO) == 1 ~ str_c("00000", GRUPO),
str_length(GRUPO) == 2 ~ str_c("0000", GRUPO),
str_length(GRUPO) == 3 ~ str_c("000", GRUPO),
str_length(GRUPO) == 4 ~ str_c("00", GRUPO)),
CADENA = case_when(str_length(CADENA) == 1 ~ str_c("00000", CADENA),
str_length(CADENA) == 2 ~ str_c("0000", CADENA))) %>%
select(-`Categoría Crédito`)
##### Union de bases #####
Unidas <- Casos_aplicables %>%
left_join(Der_proc)
Neg_c_derechos <- Unidas %>%
filter(!is.na(NOMBRE)) # Si cuadra, aqui estan Toks y Sanborns, los importantes
print(nrow(Neg_c_derechos)/nrow(Casos_aplicables)) # % de registros con derechos adquiridos que se explican
Resto <- Unidas %>%
filter(is.na(NOMBRE)) %>%
select(-NOMBRE, -`Intercambio Créd`, -`Cuota Débito`, -Ind_cuota) # Si cuadra, desde el Input dice que Vips no
write.xlsx2(as.data.frame(Resto), "Outputs/Negocios atipicos-TD en pesos (cuota)-CI en tasa.xlsx",
sheetName = "Lista", row.names = F, append = F)
##### Porcentaje de facturacion #####
Fact <- Resto %>%
left_join(Entregada) %>%
filter(!is.na(FACT_DEB))
print(sum(Fact$FACT_DEB)/sum(Entregada$FACT_DEB))
# BBVA Competencia Camaras (ult. act 1 junio 2020)
# Revision de negocios con tasas de descuento menores a cuotas de intercambio
gc()
library(tidyverse)
library(readxl)
library(xlsx)
##### Lectura de bases de datos #####
source <- function(f, encoding = 'UTF-8') { # Para que el source si lea acentos y caracteres raros
l <- readLines(f, encoding=encoding)
eval(parse(text=l),envir=.GlobalEnv)
}
source("Codigos/Comparacion tasas descuento y cuotas intercambio.R")
rm(list=setdiff(ls(), "Comparacion_CI"))
Fact_riesgo <- read_excel("Inputs/Transaccionalidad_comercios_v2.xlsx",
sheet = "VentasxComercio", skip = 3) %>%
rename(AJE_CRED_TXS = TXNS...5, AJE_CRED_VAL = MONTO...6,
PRO_CRED_TXS = TXNS...7, PRO_CRED_VAL = MONTO...8,
AJE_DEB_TXS = TXNS...9, AJE_DEB_VAL = MONTO...10,
PRO_DEB_TXS = TXNS...11, PRO_DEB_VAL = MONTO...12) %>%
select(AFILIACION, GRUPO, CADENA, `RAZON SOCIAL`, AJE_CRED_VAL, AJE_DEB_VAL)
Total_liquidacion <- read_excel("Inputs/Total_liquidacion.xlsx", sheet = "Total", skip = 4) %>%
rename(AJE_CRED_TXS_TOT = TXNS...1, AJE_CRED_VAL_TOT = MONTO...2,
AJE_DEB_TXS_TOT = TXNS...5, AJE_DEB_VAL_TOT = MONTO...6)
# BBVA Competencia Camaras (ult. act 23 julio 2020)
=======
>>>>>>> dacba800ff12f7e1b475a09633a2337b484eeb88
# Facturacion de negocios riesgosos dentro del total
gc()
library(tidyverse)
library(readxl)
library(xlsx)
library(scales)
##### Lectura de bases de datos #####
source <- function(f, encoding = 'UTF-8') { # Para que el source si lea acentos y caracteres raros
l <- readLines(f, encoding=encoding)
eval(parse(text=l),envir=.GlobalEnv)
}
source("Codigos/Revision negocios caso especifico en que tasas descto menor a CI.R")
rm(list=setdiff(ls(), c('Comparacion_CI', 'a', 'b')))
Fact_riesgo <- read_excel("Inputs/Transaccionalidad_comercios_v2.xlsx",
sheet = "VentasxComercio", skip = 3) %>%
rename(AJE_CRED_TXS = TXNS...5, AJE_CRED_VAL = MONTO...6,
PRO_CRED_TXS = TXNS...7, PRO_CRED_VAL = MONTO...8,
AJE_DEB_TXS = TXNS...9, AJE_DEB_VAL = MONTO...10,
PRO_DEB_TXS = TXNS...11, PRO_DEB_VAL = MONTO...12)
Total_liquidacion <- read_excel("Inputs/Total_liquidacion.xlsx", sheet = "Total", skip = 4) %>%
rename(AJE_CRED_TXS_TOT = TXNS...1, AJE_CRED_VAL_TOT = MONTO...2,
AJE_DEB_TXS_TOT = TXNS...5, AJE_DEB_VAL_TOT = MONTO...6)
##### Procesamiento de bases de datos para union #####
Fact_riesgo_proc <- Fact_riesgo %>%
select(AFILIACION, GRUPO, CADENA, `RAZON SOCIAL`, AJE_CRED_VAL, AJE_DEB_VAL)
CompCI_proc <- Comparacion_CI %>%
select(AFILIACION, GRUPO, CADENA, `RAZON SOCIAL`, GIRO, Comp_CI_cred, Comp_CI_deb2)
##### Union #####
Unida <- Fact_riesgo_proc %>%
left_join(CompCI_proc) %>%
filter(!is.na(Comp_CI_cred))
View(Unida)
# BBVA Competencia Camaras (ult. act 27 julio 2020)
# Revision de negocios con tasas de descuento menores a cuotas de intercambio
gc()
library(tidyverse)
library(readxl)
library(xlsx)
##### Lectura de bases de datos #####
source <- function(f, encoding = 'UTF-8') { # Para que el source si lea acentos y caracteres raros
l <- readLines(f, encoding=encoding)
eval(parse(text=l),envir=.GlobalEnv)
}
source("Codigos/Comparacion tasas descuento y cuotas intercambio.R")
rm(list=setdiff(ls(), "Comparacion_CI"))
Fact_riesgo <- read_excel("Inputs/Transaccionalidad_comercios_v2.xlsx",
sheet = "VentasxComercio", skip = 3) %>%
rename(AJE_CRED_TXS = TXNS...5, AJE_CRED_VAL = MONTO...6,
PRO_CRED_TXS = TXNS...7, PRO_CRED_VAL = MONTO...8,
AJE_DEB_TXS = TXNS...9, AJE_DEB_VAL = MONTO...10,
PRO_DEB_TXS = TXNS...11, PRO_DEB_VAL = MONTO...12) %>%
select(AFILIACION, GRUPO, CADENA, `RAZON SOCIAL`, AJE_CRED_VAL, AJE_DEB_VAL)
Total_liquidacion <- read_excel("Inputs/Total_liquidacion.xlsx", sheet = "Total", skip = 4) %>%
rename(AJE_CRED_TXS_TOT = TXNS...1, AJE_CRED_VAL_TOT = MONTO...2,
AJE_DEB_TXS_TOT = TXNS...5, AJE_DEB_VAL_TOT = MONTO...6)
Casos <- Comparacion_CI %>%
filter(Comp_CI_cred == "TD menor a CI" | Comp_CI_deb2 == "TD menor a CI") %>%
select(-GRUPO, -CADENA) %>%
rename(Tasa_cred_propia =`TASA DE DESCUENTO CRÉDITO PROPIA`,
Tasa_deb_propia =`TASA DE DESCUENTO DÉBITO PROPIA`) %>%
mutate_at(c("Tasa_cred_base", "Tasa_deb_base", "Tasa_cred_propia",
"Tasa_cred_ajena", "Tasa_deb_propia", "Tasa_deb_ajena",
"Cuota_deb2"), as.numeric) %>%
mutate(Ind_cred =
case_when(
(Tasa_cred_propia - Tasa_cred_ajena == 0) & is.na(Tasa_cred_base) ~ "Iguales",
Tasa_cred_propia == 0  & Tasa_cred_ajena == 0 & !is.na(Tasa_cred_base) ~ "Base",
(Tasa_cred_propia - Tasa_cred_ajena != 0) & is.na(Tasa_cred_base) ~ "Distintas"),
Ind_deb =
case_when(
Ind_cuota == "C" ~ "Cuota",
(Tasa_deb_propia - Tasa_deb_ajena == 0) & is.na(Tasa_deb_base) ~ "Iguales",
Tasa_deb_propia == 0  & Tasa_deb_ajena == 0 & !is.na(Tasa_deb_base) ~ "Base",
(Tasa_deb_propia - Tasa_deb_ajena != 0) & is.na(Tasa_deb_base) ~ "Distintas"))
##### Bases de casos para credito y para debito y listas de negocios en Excel #####
Llave_gpo_cad <- Comparacion_CI %>%
select(AFILIACION, GRUPO, CADENA, `RAZON SOCIAL`, GIRO)
Casos_cred <- Casos %>%
filter(Comp_CI_cred == "TD menor a CI") %>%
select(-Tasa_deb_base, -Tasa_deb_propia, -Tasa_deb_ajena, -Cuota_deb2, -Cuota_deb_CI,
-Comp_CI_deb2, -Ind_cuota, -Ind_deb) %>%
left_join(Llave_gpo_cad)
Casos_deb <- Casos %>%
filter(Comp_CI_deb2 == "TD menor a CI") %>%
select(-Tasa_cred_base, -Tasa_cred_propia, -Tasa_cred_ajena, -CI_cred,
-Comp_CI_cred, -Ind_cred) %>%
left_join(Llave_gpo_cad)
a <- Casos_cred %>% distinct(AFILIACION, GRUPO, CADENA, `RAZON SOCIAL`, GIRO)
b <- Casos_deb %>% distinct(AFILIACION, GRUPO, CADENA, `RAZON SOCIAL`, GIRO)
write.xlsx2(as.data.frame(a), "Outputs/Negocios con potencial riesgo TD menor a CI.xlsx",
sheetName = "Credito", row.names = F, append = F)
write.xlsx2(as.data.frame(b), "Outputs/Negocios con potencial riesgo TD menor a CI.xlsx",
sheetName = "Debito", row.names = F, append = T)
glimpse(Casos_cred)
glimpse(Fact_riesgo)
Fact_cred <- Casos_cred %>%
left_join(Fact_riesgo)
View(Fact_cred)
Cred_cero <- Casos_cred %>%
mutate(Ind =
case_when(Ind_cred == 'Base' & Tasa_cred_base == 0 ~ 1,
Ind_cred == 'Iguales' & Tasa_cred_ajena == 0 ~ 1,
TRUE ~ 0)) %>%
filter(Ind == 1) %>%
select(-CI_deb, -Ind_cred, -Ind)
View(Cred_cero)
Cred_cero <- Casos_cred %>%
mutate(Ind =
case_when(Ind_cred == 'Base' & Tasa_cred_base == 0 ~ 1,
Ind_cred == 'Iguales' & Tasa_cred_ajena == 0 ~ 1,
TRUE ~ 0)) %>%
filter(Ind == 1) %>%
select(-CI_deb, -Ind_cred, -Ind) %>%
left_join(Fact_riesgo)
View(Cred_cero)
print(str_c('La facturacion para negocios en riesgo con TD de cred = 0 representa el: ',
percent(sum(Cred_cero$AJE_CRED_VAL, na.rm = T)/Total_liquidacion$AJE_CRED_VAL_TOT),
' del total de facturacion en credito ajena'))
sum(Cred_cero$AJE_CRED_VAL)
sum(Cred_cero$AJE_CRED_VAL, na.rm = T)
percent <- function(x, digits = 2, format = "f", ...) {      # Create user-defined function
paste0(formatC(x * 100, format = format, digits = digits, ...), "%")
}
print(str_c('La facturacion para negocios en riesgo con TD de cred = 0 representa el: ',
percent(sum(Cred_cero$AJE_CRED_VAL, na.rm = T)/Total_liquidacion$AJE_CRED_VAL_TOT),
' del total de facturacion en credito ajena'))
unique(Casos_deb$Ind_deb)
glimpse(Casos_deb)
Deb_cero <- Casos_deb %>%
mutate(Ind =
case_when(Ind_deb == 'Cuota' & Cuota_deb2 == 0 ~ 1,
Ind_deb == 'Base' & Tasa_deb_base == 0 ~ 1,
Ind_deb %in% c('Iguales', 'Diferentes') & Tasa_deb_ajena == 0 ~ 1,
TRUE ~ 0)) %>%
filter(Ind == 1)
View(Deb_cero)
Deb_cero <- Casos_deb %>%
mutate(Ind =
case_when(Ind_deb == 'Cuota' & Cuota_deb2 == 0 ~ 1,
Ind_deb == 'Base' & Tasa_deb_base == 0 ~ 1,
Ind_deb %in% c('Iguales', 'Diferentes') & Tasa_deb_ajena == 0 ~ 1,
TRUE ~ 0)) %>%
filter(Ind == 1) %>%
select(-Ind_deb, -Ind) %>%
left_join(Fact_riesgo)
View(Deb_cero)
View(Total_liquidacion)
print(str_c('La facturacion para negocios en riesgo con TD de deb = 0 representa el: ',
percent(sum(Deb_cero$AJE_DEB_VAL, na.rm = T)/Total_liquidacion$AJE_DEB_VAL_TOT),
' del total de facturacion en debito ajena'))
write.xlsx2(as.data.frame(Cred_cero), "Outputs/Casos en riesgo donde TD es igual a cero.xlsx",
sheetName = "Credito", row.names = F, append = F)
write.xlsx2(as.data.frame(Deb_cero), "Outputs/Casos en riesgo donde TD es igual a cero.xlsx",
sheetName = "Debito", row.names = F, append = T)
print(str_c('La facturacion para negocios en riesgo con TD de cred = 0 representa el: ',
percent(sum(Cred_cero$AJE_CRED_VAL, na.rm = T)/Total_liquidacion$AJE_CRED_VAL_TOT),
' del total de facturacion en credito ajena'))
Cred_cero <- Casos_cred %>%
mutate(Ind =
case_when(Ind_cred == 'Base' & Tasa_cred_base == 0 ~ 1,
Ind_cred == 'Iguales' & Tasa_cred_ajena == 0 ~ 1,
TRUE ~ 0)) %>%
filter(Ind == 1) %>%
select(-CI_deb, -Ind_cred, -Ind, -AJE_DEB_VAL) %>%
left_join(Fact_riesgo)
Cred_cero <- Casos_cred %>%
mutate(Ind =
case_when(Ind_cred == 'Base' & Tasa_cred_base == 0 ~ 1,
Ind_cred == 'Iguales' & Tasa_cred_ajena == 0 ~ 1,
TRUE ~ 0)) %>%
filter(Ind == 1) %>%
left_join(Fact_riesgo) %>%
select(-CI_deb, -Ind_cred, -Ind, -AJE_DEB_VAL)
print(str_c('La facturacion para negocios en riesgo con TD de cred = 0 representa el: ',
percent(sum(Cred_cero$AJE_CRED_VAL, na.rm = T)/Total_liquidacion$AJE_CRED_VAL_TOT),
' del total de facturacion en credito ajena'))
Deb_cero <- Casos_deb %>%
mutate(Ind =
case_when(Ind_deb == 'Cuota' & Cuota_deb2 == 0 ~ 1,
Ind_deb == 'Base' & Tasa_deb_base == 0 ~ 1,
Ind_deb %in% c('Iguales', 'Diferentes') & Tasa_deb_ajena == 0 ~ 1,
TRUE ~ 0)) %>%
filter(Ind == 1) %>%
left_join(Fact_riesgo) %>%
select(-Ind_deb, -Ind, -AJE_CRED_VAL)
print(str_c('La facturacion para negocios en riesgo con TD de deb = 0 representa el: ',
percent(sum(Deb_cero$AJE_DEB_VAL, na.rm = T)/Total_liquidacion$AJE_DEB_VAL_TOT),
' del total de facturacion en debito ajena'))
write.xlsx2(as.data.frame(Cred_cero), "Outputs/Casos en riesgo donde TD es igual a cero.xlsx",
sheetName = "Credito", row.names = F, append = F)
write.xlsx2(as.data.frame(Deb_cero), "Outputs/Casos en riesgo donde TD es igual a cero.xlsx",
sheetName = "Debito", row.names = F, append = T)
# BBVA Competencia Camaras (ult. act 2 junio 2020)
# Revision de casos con cuotas en pesos aunque debieran ser %, por derechos adquiridos (restaurantes, etc)
gc()
library(tidyverse)
library(readxl)
library(xlsx)
##### Lectura de bases de datos #####
source <- function(f, encoding = 'UTF-8') { # Para que el source si lea acentos y caracteres raros
l <- readLines(f, encoding=encoding)
eval(parse(text=l),envir=.GlobalEnv)
}
source("Codigos/Revision negocios caso especifico en que tasas descto menor a CI.R")
<<<<<<< HEAD
rm(list=setdiff(ls(), "Comparacion_CI"))
Der_adquiridos <- read_excel("Inputs/Lista Derechos Adquiridos_con tasas de intercambio_2019_3.xlsx",
range = "A3:G48")
Entregada <- read_excel("Inputs/124_vi_2019_10.xlsx") %>%
rename(AFILIACION = AFILIACION_NUM,
Tasa_cred = `TASA CRED`,
Tasa_deb = `TASA DEB`,
Cuota_deb = `CUOT DEB`) %>%
mutate_at(c("Tasa_cred", "Tasa_deb", "Cuota_deb", "FACT_TDC", "FACT_DEB"), as.numeric) %>%
select(AFILIACION, FACT_TDC, FACT_DEB)
##### Procesamiento de bases para union #####
Casos_aplicables <- Comparacion_CI %>%
filter(Comp_CI_deb2 == "No aplica") %>%
select(AFILIACION, `RAZON SOCIAL`, GRUPO, CADENA, GIRO, Cuota_deb2, Ind_cuota, Cuota_deb_CI, CI_deb)
Der_proc <- Der_adquiridos %>%
mutate(GRUPO = case_when(str_length(GRUPO) == 1 ~ str_c("00000", GRUPO),
str_length(GRUPO) == 2 ~ str_c("0000", GRUPO),
str_length(GRUPO) == 3 ~ str_c("000", GRUPO),
str_length(GRUPO) == 4 ~ str_c("00", GRUPO)),
CADENA = case_when(str_length(CADENA) == 1 ~ str_c("00000", CADENA),
str_length(CADENA) == 2 ~ str_c("0000", CADENA))) %>%
select(-`Categoría Crédito`)
##### Union de bases #####
Unidas <- Casos_aplicables %>%
left_join(Der_proc)
Neg_c_derechos <- Unidas %>%
filter(!is.na(NOMBRE)) # Si cuadra, aqui estan Toks y Sanborns, los importantes
print(nrow(Neg_c_derechos)/nrow(Casos_aplicables)) # % de registros con derechos adquiridos que se explican
View(Unidas)
View(Casos_aplicables)
write.xlsx2(as.data.frame(Casos_aplicables),
"Outputs/Negocios atipicos COMPLETOS-TD en pesos (cuota)-CI en tasa.xlsx",
sheetName = "Lista", row.names = F, append = F)
Fact_completa <- Casos_aplicables %>%
left_join(Entregada)
View(Fact_completa)
Fact_completa <- Casos_aplicables %>%
left_join(Entregada) %>%
filter(!is.na(FACT_DEB))
Resto <- Unidas %>%
filter(is.na(NOMBRE)) %>%
select(-NOMBRE, -`Intercambio Créd`, -`Cuota Débito`, -Ind_cuota) # Si cuadra, desde el Input dice que Vips no
Fact <- Resto %>%
left_join(Entregada) %>%
filter(!is.na(FACT_DEB))
print(sum(Fact$FACT_DEB)/sum(Entregada$FACT_DEB))
Fact_completa <- Casos_aplicables %>%
left_join(Entregada) %>%
filter(!is.na(FACT_DEB))
print(sum(Fact_completa$FACT_DEB)/sum(Entregada$FACT_DEB))
=======
rm(list=setdiff(ls(), c('Comparacion_CI', 'a', 'b')))
Fact_riesgo <- read_excel("Inputs/Transaccionalidad_comercios_v2.xlsx",
sheet = "VentasxComercio", skip = 3) %>%
rename(AJE_CRED_TXS = TXNS...5, AJE_CRED_VAL = MONTO...6,
PRO_CRED_TXS = TXNS...7, PRO_CRED_VAL = MONTO...8,
AJE_DEB_TXS = TXNS...9, AJE_DEB_VAL = MONTO...10,
PRO_DEB_TXS = TXNS...11, PRO_DEB_VAL = MONTO...12)
Total_liquidacion <- read_excel("Inputs/Total_liquidacion.xlsx", sheet = "Total", skip = 4) %>%
rename(AJE_CRED_TXS_TOT = TXNS...1, AJE_CRED_VAL_TOT = MONTO...2,
AJE_DEB_TXS_TOT = TXNS...5, AJE_DEB_VAL_TOT = MONTO...6)
##### Procesamiento de bases de datos para union #####
Fact_riesgo_proc <- Fact_riesgo %>%
select(AFILIACION, GRUPO, CADENA, `RAZON SOCIAL`, AJE_CRED_VAL, AJE_DEB_VAL)
CompCI_proc <- Comparacion_CI %>%
select(AFILIACION, GRUPO, CADENA, `RAZON SOCIAL`, GIRO, Comp_CI_cred, Comp_CI_deb2)
##### Union #####
Unida <- Fact_riesgo_proc %>%
left_join(CompCI_proc) %>%
filter(!is.na(Comp_CI_cred))
##### Facturacion como % del total credito y debito #####
Fact_cred <- Unida %>%
filter(Comp_CI_cred == 'TD menor a CI')
percent <- function(x, digits = 2, format = "f", ...) {      # Create user-defined function
paste0(formatC(x * 100, format = format, digits = digits, ...), "%")
}
print(str_c('La facturacion para negocios en riesgo representa el: ',
percent(sum(Fact_cred$AJE_CRED_VAL)/Total_liquidacion$AJE_CRED_VAL_TOT),
' del total de facturacion en credito ajena'))
Fact_deb <- Unida %>%
filter(Comp_CI_deb2 == 'TD menor a CI')
print(str_c('La facturacion para negocios en riesgo representa el: ',
percent(sum(Fact_deb$AJE_DEB_VAL)/Total_liquidacion$AJE_DEB_VAL_TOT),
' del total de facturacion en debito ajena'))
Fact_tot <- Unida %>%
filter(Comp_CI_cred == 'TD menor a CI' | Comp_CI_deb2 == 'TD menor a CI') %>%
mutate(Ind_cred = ifelse(Comp_CI_cred == 'TD menor a CI', 1, 0),
Ind_deb = ifelse(Comp_CI_deb2 == 'TD menor a CI', 1, 0)) %>%
group_by(Ind_cred, Ind_deb) %>%
summarise(AJE_CRED = sum(AJE_CRED_VAL), AJE_DEB = sum(AJE_DEB_VAL)) %>%
group_by(Ind_cred) %>% mutate(AJE_CRED_RISK = sum(AJE_CRED)) %>% ungroup() %>%
group_by(Ind_deb) %>% mutate(AJE_DEB_RISK = sum(AJE_DEB)) %>% ungroup() %>%
filter(Ind_cred == 1, Ind_deb == 1) %>%
select(-Ind_cred, -Ind_deb)
print(str_c(
'La facturacion para negocios en riesgo representa el: ',
percent(
(Fact_tot$AJE_CRED_RISK + Fact_tot$AJE_DEB_RISK) / (
Total_liquidacion$AJE_CRED_VAL_TOT + Total_liquidacion$AJE_DEB_VAL_TOT)),
' del total de facturacion total ajena'))
##### Negocios que faltaron #####
Cred_falt <- a %>%
left_join(Fact_riesgo_proc) %>%
filter(is.na(AJE_CRED_VAL)) %>% select(-AJE_CRED_VAL, -AJE_DEB_VAL) %>%
distinct()
Deb_falt <- b %>%
left_join(Fact_riesgo_proc) %>%
filter(is.na(AJE_DEB_VAL)) %>% select(-AJE_CRED_VAL, -AJE_DEB_VAL) %>%
distinct()
rm(a, b)
Tot_falt <- Cred_falt %>%
bind_rows(Deb_falt) %>%
distinct()
write.xlsx2(as.data.frame(Tot_falt), "Outputs/Negocios en riesgo sin facturacion enviada.xlsx",
sheetName = "Lista_completa", row.names = F, append = F)
write.xlsx2(as.data.frame(Cred_falt), "Outputs/Negocios en riesgo sin facturacion enviada.xlsx",
sheetName = "Credito", row.names = F, append = T)
write.xlsx2(as.data.frame(Deb_falt), "Outputs/Negocios en riesgo sin facturacion enviada.xlsx",
sheetName = "Debito", row.names = F, append = T)
# Base nueva con columnas de tasas de descuento vueltas colapsadas (ajena, propia, base)
gc()
library(tidyverse)
library(readxl)
library(xlsx)
##### Lectura de bases de datos #####
Nueva <- read_excel("Inputs/Ejecicio tasas de descuento.xlsx") %>%
select(-...19, -...20, -...21, -...22) %>%
slice(3:193921)
Nueva_proc <- Nueva %>%
rename(AFILIACION_NUM = AFILIACION, Tasa_cred_base = `TASA DE DESCUENTO CRÉDITO BASE`,
Tasa_cred_propia =`TASA DE DESCUENTO CRÉDITO PROPIA`,
Tasa_cred_ajena =`TASA DE DESCUENTO CRÉDITO AJENA`,
Tasa_deb_base = `TASA DE DESCUENTO  DÉBITO BASE`,
Tasa_deb_propia =`TASA DE DESCUENTO DÉBITO PROPIA`,
Tasa_deb_ajena =`TASA DE DESCUENTO DÉBITO AJENA`,
Cuota_deb = `CUOTA DÉBITO`, Ind_cuota = `CUOTA DEBITO`) %>%
mutate_at(c("Tasa_cred_base", "Tasa_deb_base", "Tasa_cred_propia",
"Tasa_cred_ajena", "Tasa_deb_propia", "Tasa_deb_ajena",
"Cuota_deb"), as.numeric) %>%
select(AFILIACION_NUM, GRUPO, CADENA, `RAZON SOCIAL`,GIRO, Tasa_cred_base, Tasa_cred_propia, Tasa_cred_ajena,
Tasa_deb_base, Tasa_deb_propia, Tasa_deb_ajena, Cuota_deb, Ind_cuota)
View(Nueva_proc)
Nueva_juntas <- Nueva_proc %>%
mutate(
Tasa_cred =
case_when(
(Tasa_cred_propia - Tasa_cred_ajena == 0) & is.na(Tasa_cred_base) ~ as.character(Tasa_cred_ajena),
Tasa_cred_propia == 0  & Tasa_cred_ajena == 0 & !is.na(Tasa_cred_base) ~ as.character(Tasa_cred_base),
(Tasa_cred_propia - Tasa_cred_ajena != 0) & is.na(Tasa_cred_base) ~ str_c(Tasa_cred_propia,"/",
Tasa_cred_ajena)),
Tasa_deb =
case_when(
Ind_cuota == "C" ~ "N/A",
(Tasa_deb_propia - Tasa_deb_ajena == 0) & is.na(Tasa_deb_base) ~ as.character(Tasa_deb_ajena),
Tasa_deb_propia == 0  & Tasa_deb_ajena == 0 & !is.na(Tasa_deb_base) ~ as.character(Tasa_deb_base),
(Tasa_deb_propia - Tasa_deb_ajena != 0) & is.na(Tasa_deb_base) ~ str_c(Tasa_deb_propia,"/",
Tasa_deb_ajena)),
Cuota_deb2 =
case_when(Ind_cuota == "T" ~ "N/A",
TRUE ~ as.character(Cuota_deb))) %>%
select(AFILIACION_NUM, GRUPO, CADENA, `RAZON SOCIAL`,GIRO, Tasa_cred, Tasa_deb, Cuota_deb2, Ind_cuota)
View(Nueva_juntas)
write.csv(Nueva_juntas, "Outputs/Base nueva con columnas de TD colapsadas.csv", row.names = F)
gc()
library(tidyverse)
library(readxl)
library(xlsx)
##### Lectura bases de datos #####
source <- function(f, encoding = 'UTF-8') { # Para que el source si lea acentos y caracteres raros
l <- readLines(f, encoding=encoding)
eval(parse(text=l),envir=.GlobalEnv)
}
source("Codigos/Base nueva juntando columnas de tasas de descueto (propia, ajena, base).R")
>>>>>>> dacba800ff12f7e1b475a09633a2337b484eeb88
# BBVA Competencia Camaras (ult act 14 abril 2020)
# Cruce de bds de tasas de descuento para ver discrepancias
gc()
library(tidyverse)
library(readxl)
library(xlsx)
##### Lectura de bases de datos #####
Entregada <- read_excel("Inputs/124_vi_2019_10.xlsx")
Nueva <- read_excel("Inputs/Ejecicio tasas de descuento.xlsx") %>%
select(-...19, -...20, -...21, -...22) %>%
slice(3:193921)
##### Procesamiento base entregada #####
Entregada_proc <- Entregada %>%
rename(Tasa_cred = `TASA CRED`,
Tasa_deb = `TASA DEB`,
Cuota_deb = `CUOT DEB`) %>%
mutate_at(c("Tasa_cred", "Tasa_deb", "Cuota_deb"), as.numeric) %>%
select(AFILIACION_NUM, Tasa_cred, Tasa_deb, Cuota_deb)
<<<<<<< HEAD
View(Nueva)
x <- Nueva %>% select(AFILIACION) %>% distinct()
View(x)
y <- vroom("//saiconsultores.sharepoint.com@SSL/DavWWWRoot/CA0/Documentos compartidos/A-C/BBVA Competencia/IEBC-005-2018/Primer Requerimiento de Información/Sexto Reiteramiento/Revisión economistas/xi/124_XI_ BBDD.csv")
gc()
library(tidyverse)
library(readxl)
library(xlsx)
library(vroom)
y <- vroom("//saiconsultores.sharepoint.com@SSL/DavWWWRoot/CA0/Documentos compartidos/A-C/BBVA Competencia/IEBC-005-2018/Primer Requerimiento de Información/Sexto Reiteramiento/Revisión economistas/xi/124_XI_ BBDD.csv")
X124_XI_BBDD <- read_csv("//saiconsultores.sharepoint.com@SSL/DavWWWRoot/CA0/Documentos compartidos/A-C/BBVA Competencia/IEBC-005-2018/Primer Requerimiento de Información/Sexto Reiteramiento/Revisión economistas/xi/124_XI_ BBDD.csv")
y <- vroom("Descargas/124_XI_ BBDD.csv")
# BBVA Competencia Camaras (ult. act 5 agosto 2020)
# Lectura de archivos log transaccional, p/ dar respuesta a numero de observaciones en numeral 125,
# p/ base 124.ix del secto reiteramiento. Los archivos se encuentran en disco duro de AMC al 05ago20
gc()
library(tidyverse)
library(readxl)
library(xlsx)
library(vroom)
y <- vroom("Descargas/124_XI_ BBDD.csv")
y <- vroom("C:/Users/santi/Downloads/124_XI_ BBDD.csv")
View(y)
y <- vroom("Inputs/124_XI_ BBDD.csv")
View(y)
y <- vroom("Inputs/124_XI_ BBDD.csv") %>%
distinct(Folio)
Fraudes <- vroom("Inputs/124_XI_ BBDD.csv")
Fraudes_proc <- Fraudes %>% distinct()
Fraudes_proc <- Fraudes %>% distinct(Folio)
rm(x)
rm(y)
View(Fraudes)
Ctos_fraudes <- vroom("Inputs/Anexo 124.xii.1.csv")
=======
##### Procesamiento base nueva #####
Nueva_proc <- Nueva %>%
rename(AFILIACION_NUM = AFILIACION, Tasa_cred2_base = `TASA DE DESCUENTO CRÉDITO BASE`,
Tasa_cred2_propia =`TASA DE DESCUENTO CRÉDITO PROPIA`,
Tasa_cred2_ajena =`TASA DE DESCUENTO CRÉDITO AJENA`,
Tasa_deb2_base = `TASA DE DESCUENTO  DÉBITO BASE`,
Tasa_deb2_propia =`TASA DE DESCUENTO DÉBITO PROPIA`,
Tasa_deb2_ajena =`TASA DE DESCUENTO DÉBITO AJENA`,
Cuota_deb2 = `CUOTA DÉBITO`) %>%
mutate_at(c("Tasa_cred2_base", "Tasa_deb2_base", "Tasa_cred2_propia",
"Tasa_cred2_ajena", "Tasa_deb2_propia", "Tasa_deb2_ajena",
"Cuota_deb2"), as.numeric) %>%
select(AFILIACION_NUM, Tasa_cred2_base, Tasa_cred2_propia, Tasa_cred2_ajena,
Tasa_deb2_base, Tasa_deb2_propia, Tasa_deb2_ajena, Cuota_deb2)
##### Union de bases y chequeos #####
Unida <- Nueva_proc %>%
left_join(Entregada_proc) %>%
mutate(revtasa_cred = ifelse(!is.na(Tasa_cred - Tasa_cred2_base), Tasa_cred - Tasa_cred2_base,
ifelse(!is.na(Tasa_cred - Tasa_cred2_ajena),
Tasa_cred - Tasa_cred2_ajena,
ifelse(!is.na(Tasa_cred - Tasa_cred2_propia),
Tasa_cred - Tasa_cred2_propia, NA))),
revtasa_deb = ifelse(!is.na(Tasa_deb - Tasa_deb2_base), Tasa_deb - Tasa_deb2_base,
ifelse(!is.na(Tasa_deb - Tasa_deb2_ajena),
Tasa_deb - Tasa_deb2_ajena,
ifelse(!is.na(Tasa_deb - Tasa_deb2_propia),
Tasa_deb - Tasa_deb2_propia, NA))),
revcuota_deb = Cuota_deb - Cuota_deb2) %>%
mutate(
estatus =
case_when((is.na(revtasa_cred) & is.na(revtasa_deb) & is.na(revcuota_deb)) ~ "Nuevos",
revtasa_cred == 0 & revtasa_deb == 0 & is.na(revcuota_deb) ~ "Tasas_iguales",
revtasa_cred != 0 & revtasa_deb == 0 & is.na(revcuota_deb) ~ "Tcred_distinta",
revtasa_cred == 0 & revtasa_deb != 0 & is.na(revcuota_deb) ~ "Tdeb_distinta",
revtasa_cred != 0 & revtasa_deb != 0 & is.na(revcuota_deb) ~ "Tasas_distintas",
revtasa_cred != 0 & revtasa_deb == 0 & revcuota_deb == 0 ~ "DebIgual_CredDist",
revtasa_deb == 0 & revcuota_deb != 0 ~ "Cdeb_distinta",
revtasa_cred == 0 & revcuota_deb == 0 ~ "Cdeb_igual",
revtasa_cred == 0 & revtasa_deb == 0 & revcuota_deb == 0 ~ "Todas_iguales")) %>%
select(AFILIACION_NUM, estatus, 1, Tasa_cred, 2:4, revtasa_cred, Tasa_deb, 5:7,
revtasa_deb, Cuota_deb, Cuota_deb2, revcuota_deb)
##### Pegado de estatus con base nueva completa #####
Llave <- Unida %>%
rename(AFILIACION = AFILIACION_NUM) %>%
select(AFILIACION, estatus, Tasa_cred, Tasa_deb,
Cuota_deb, revtasa_cred, revtasa_deb, revcuota_deb)
Descrip_giros <- Entregada %>%
select(COD_GIRO_CO, `Giro comercial (Familia)`) %>%
distinct() %>%
rename(GIRO = COD_GIRO_CO, DESC_GIRO = `Giro comercial (Familia)`) %>%
mutate(GIRO = as.character(GIRO))
Nueva_pegada <- Nueva %>%
left_join(Llave) %>%
left_join(Descrip_giros) %>%
select(1:5, 26, 6:25) %>%
mutate(
estatus =
case_when(estatus == "Tasas_iguales" | estatus == "Todas_iguales" | estatus == "Cdeb_igual" ~ "Iguales",
estatus == "Tasas_distintas" ~ "Todo difiere",
estatus == "Tdeb_distinta" | estatus == "Cdeb_distinta" ~ "Debito difiere",
estatus == "DebIgual_CredDist"| estatus == "Tcred_distinta" ~ "Credito difiere",
estatus == "Nuevos" ~ "No entregados (nuevos)")) %>%
distinct(AFILIACION, .keep_all = T)
write.csv(Nueva_pegada, "Outputs/Base nueva con columna de comparacion entre bases.csv",
row.names = F)
Tabla_resumen <- Nueva_pegada %>%
group_by(estatus) %>%
summarise(Numero_de_afiliaciones = n()) %>%
mutate(Porcentaje = Numero_de_afiliaciones / sum(Numero_de_afiliaciones)) %>%
arrange(desc(Porcentaje))
View(Nueva_pegada)
View(Tabla_resumen)
source <- function(f, encoding = 'UTF-8') { # Para que el source si lea acentos y caracteres raros
l <- readLines(f, encoding=encoding)
eval(parse(text=l),envir=.GlobalEnv)
}
source("Codigos/Base nueva juntando columnas de tasas de descueto (propia, ajena, base).R")
source("Codigos/Cruce bases de datos tasas de descuento.R")
View(Nueva_juntas)
View(Nueva_pegada)
rm(list=setdiff(ls(), c('Nueva_juntas', 'Nueva_pegada')))
View(Nueva_pegada)
View(Nueva_juntas)
Comparacion_bases <- Nueva_juntas %>%
left_join(Nueva_pegada)
View(Nueva_pegada)
View(Nueva_juntas)
View(Nueva_pegada)
Nueva_pegada_proc <- Nueva_pegada %>%
select(AFILIACION, GRUPO, CADENA, `RAZON SOCIAL`, GIRO, estatus)
View(Nueva_pegada_proc)
glimpse(Nueva_pegada_proc)
glimpse(Nueva_juntas)
Nueva_pegada_proc <- Nueva_pegada %>%
select(AFILIACION, GRUPO, CADENA, `RAZON SOCIAL`, GIRO, estatus) %>%
rename(AFILIACION_NUM = AFILIACION)
View(Nueva_pegada_proc)
Comparac_bases <- Nueva_juntas %>%
left_join(Nueva_pegada_proc)
View(Comparac_bases)
write.xlsx2(as.data.frame(Comparac_bases), "Outputs/Comparacion entre bases entregadas a COFECE.xlsx",
sheetName = "Tabla", row.names = F, append = F)
?write.csv
write.csv(as.data.frame(Comparac_bases), "Outputs/Comparacion entre bases entregadas a COFECE.csv")
write.csv(as.data.frame(Comparac_bases), "Outputs/Comparacion entre bases entregadas a COFECE.csv",
row.names = F)
# BBVA Competencia Camaras (ult. act 23 julio 2020)
# Base nueva con columnas de tasas de descuento vueltas colapsadas (ajena, propia, base), y
# comparacion con base original
>>>>>>> dacba800ff12f7e1b475a09633a2337b484eeb88
gc()
library(tidyverse)
library(readxl)
library(xlsx)
<<<<<<< HEAD
library(vroom)
Ctos_fraudes <- vroom("Inputs/Anexo 124.xii.1.csv")
View(Ctos_fraudes)
Ctos_fr_proc <- Ctos_fraudes %>% distinct(Folio)
View(Ctos_fraudes)
unique(Ctos_fraudes$Resolucion)
View(Ctos_fraudes)
=======
##### Lectura bases de datos #####
source <- function(f, encoding = 'UTF-8') { # Para que el source si lea acentos y caracteres raros
l <- readLines(f, encoding=encoding)
eval(parse(text=l),envir=.GlobalEnv)
}
source("Codigos/Base nueva juntando columnas de tasas de descueto (propia, ajena, base).R")
source("Codigos/Cruce bases de datos tasas de descuento.R")
rm(list=setdiff(ls(), c('Nueva_juntas', 'Nueva_pegada')))
##### Procesamiento de base cruzada para union con base entregada #####
Nueva_pegada_proc <- Nueva_pegada %>%
select(AFILIACION, GRUPO, CADENA, `RAZON SOCIAL`, GIRO, estatus) %>%
rename(AFILIACION_NUM = AFILIACION)
##### Base nueva/colapsada entregada a COFECE con columna para comparar con base anterior #####
Comparac_bases <- Nueva_juntas %>%
left_join(Nueva_pegada_proc)
write.csv(as.data.frame(Comparac_bases), "Outputs/Comparacion entre bases entregadas a COFECE.csv",
row.names = F)
>>>>>>> dacba800ff12f7e1b475a09633a2337b484eeb88
