View(Unida)
Unida <- Fact_riesgo_proc %>%
left_join(CompCI_proc) %>%
filter(!is.na(Comp_CI_cred))
unique(Unida$Comp_CI_cred)
Fact_cred <- Unida %>%
filter(Comp_CI_cred == 'TD menor a CI')
View(Fact_cred)
Total_liquidacion <- read_excel("Inputs/Total_liquidacion.xlsx", sheet = "Total", skip = 4)
View(Total_liquidacion)
Total_liquidacion <- read_excel("Inputs/Total_liquidacion.xlsx", sheet = "Total", skip = 4) %>%
rename(AJE_CRED_TXS_TOT = TXNS...1, AJE_CRED_VAL_TOT = MONTO...2,
AJE_DEB_TXS_TOT = TXNS...5, AJE_DEB_VAL_TOT = MONTO...6)
View(Total_liquidacion)
View(Fact_cred)
print(sum(Fact_cred$AJE_CRED_VAL))
print(sum(Fact_cred$AJE_CRED_VAL)/Total_liquidacion$AJE_CRED_VAL_TOT)
print('La facturacion para negocios en riesgo representa el:',
sum(Fact_cred$AJE_CRED_VAL)/Total_liquidacion$AJE_CRED_VAL_TOT,
'del total de facturacion en credito')
?print
?str_c
print(str_c('La facturacion para negocios en riesgo representa el:',
sum(Fact_cred$AJE_CRED_VAL)/Total_liquidacion$AJE_CRED_VAL_TOT,
'del total de facturacion en credito'))
print(str_c('La facturacion para negocios en riesgo representa el: ',
sum(Fact_cred$AJE_CRED_VAL)/Total_liquidacion$AJE_CRED_VAL_TOT,
'del total de facturacion en credito'))
print(str_c('La facturacion para negocios en riesgo representa el: ',
sum(Fact_cred$AJE_CRED_VAL)/Total_liquidacion$AJE_CRED_VAL_TOT,
' del total de facturacion en credito'))
library(scales)
?label_percent
print(str_c('La facturacion para negocios en riesgo representa el: ',
label_percent(sum(Fact_cred$AJE_CRED_VAL)/Total_liquidacion$AJE_CRED_VAL_TOT,
accuracy = 0.001),
' del total de facturacion en credito'))
print(str_c('La facturacion para negocios en riesgo representa el: ',
label_percent(as.character(sum(Fact_cred$AJE_CRED_VAL)/Total_liquidacion$AJE_CRED_VAL_TOT,
accuracy = 0.001)),
' del total de facturacion en credito'))
print(str_c('La facturacion para negocios en riesgo representa el: ',
label_percent(as.character(sum(Fact_cred$AJE_CRED_VAL)/Total_liquidacion$AJE_CRED_VAL_TOT),
accuracy = 0.001),
' del total de facturacion en credito'))
?percent
?formatC
percent <- function(x, digits = 2, format = "f", ...) {      # Create user-defined function
paste0(formatC(x * 100, format = format, digits = digits, ...), "%")
}
print(str_c('La facturacion para negocios en riesgo representa el: ',
percent(sum(Fact_cred$AJE_CRED_VAL)/Total_liquidacion$AJE_CRED_VAL_TOT),
' del total de facturacion en credito'))
View(Unida)
Fact_deb <- Unida %>%
filter(Comp_CI_deb2 == 'TD menor a CI')
View(Fact_deb)
Fact_deb <- Unida %>%
filter(Comp_CI_deb2 == 'TD menor a CI')
View(Fact_deb)
print(str_c('La facturacion para negocios en riesgo representa el: ',
percent(sum(Fact_deb$AJE_DEB_VAL)/Total_liquidacion$AJE_DEB_VAL_TOT),
' del total de facturacion en debito'))
# BBVA Competencia Camaras (ult. act 1 junio 2020)
# Revision de negocios con tasas de descuento menores a cuotas de intercambio
gc()
library(tidyverse)
library(readxl)
library(xlsx)
##### Lectura de bases de datos #####
source <- function(f, encoding = 'UTF-8') { # Para que el source si lea acentos y caracteres raros
l <- readLines(f, encoding=encoding)
eval(parse(text=l),envir=.GlobalEnv)
}
source("Codigos/Comparacion tasas descuento y cuotas intercambio.R")
rm(list=setdiff(ls(), "Comparacion_CI"))
Entregada <- read_excel("Inputs/124_vi_2019_10.xlsx") %>%
rename(AFILIACION = AFILIACION_NUM,
Tasa_cred = `TASA CRED`,
Tasa_deb = `TASA DEB`,
Cuota_deb = `CUOT DEB`) %>%
mutate_at(c("Tasa_cred", "Tasa_deb", "Cuota_deb", "FACT_TDC", "FACT_DEB"), as.numeric) %>%
select(AFILIACION, FACT_TDC, FACT_DEB)
##### Filtro de TD menor a CI e indicador de igualdad entre ajena y propia #####
Casos <- Comparacion_CI %>%
filter(Comp_CI_cred == "TD menor a CI" | Comp_CI_deb2 == "TD menor a CI") %>%
select(-GRUPO, -CADENA) %>%
rename(Tasa_cred_propia =`TASA DE DESCUENTO CRÉDITO PROPIA`,
Tasa_deb_propia =`TASA DE DESCUENTO DÉBITO PROPIA`) %>%
mutate_at(c("Tasa_cred_base", "Tasa_deb_base", "Tasa_cred_propia",
"Tasa_cred_ajena", "Tasa_deb_propia", "Tasa_deb_ajena",
"Cuota_deb2"), as.numeric) %>%
mutate(Ind_cred =
case_when(
(Tasa_cred_propia - Tasa_cred_ajena == 0) & is.na(Tasa_cred_base) ~ "Iguales",
Tasa_cred_propia == 0  & Tasa_cred_ajena == 0 & !is.na(Tasa_cred_base) ~ "Base",
(Tasa_cred_propia - Tasa_cred_ajena != 0) & is.na(Tasa_cred_base) ~ "Distintas"),
Ind_deb =
case_when(
Ind_cuota == "C" ~ "Cuota",
(Tasa_deb_propia - Tasa_deb_ajena == 0) & is.na(Tasa_deb_base) ~ "Iguales",
Tasa_deb_propia == 0  & Tasa_deb_ajena == 0 & !is.na(Tasa_deb_base) ~ "Base",
(Tasa_deb_propia - Tasa_deb_ajena != 0) & is.na(Tasa_deb_base) ~ "Distintas"))
##### Bases de casos para credito y para debito y listas de negocios en Excel #####
Llave_gpo_cad <- Comparacion_CI %>%
select(AFILIACION, GRUPO, CADENA, `RAZON SOCIAL`, GIRO)
Casos_cred <- Casos %>%
filter(Comp_CI_cred == "TD menor a CI") %>%
select(-Tasa_deb_base, -Tasa_deb_propia, -Tasa_deb_ajena, -Cuota_deb2, -Cuota_deb_CI,
-Comp_CI_deb2, -Ind_cuota, -Ind_deb) %>%
left_join(Llave_gpo_cad)
Casos_deb <- Casos %>%
filter(Comp_CI_deb2 == "TD menor a CI") %>%
select(-Tasa_cred_base, -Tasa_cred_propia, -Tasa_cred_ajena, -CI_cred,
-Comp_CI_cred, -Ind_cred) %>%
left_join(Llave_gpo_cad)
a <- Casos_cred %>% distinct(AFILIACION, GRUPO, CADENA, `RAZON SOCIAL`, GIRO)
b <- Casos_deb %>% distinct(AFILIACION, GRUPO, CADENA, `RAZON SOCIAL`, GIRO)
View(a)
View(b)
# BBVA Competencia Camaras (ult. act 23 julio 2020)
# Facturacion de negocios riesgosos dentro del total
gc()
library(tidyverse)
library(readxl)
library(xlsx)
library(scales)
##### Lectura de bases de datos #####
source <- function(f, encoding = 'UTF-8') { # Para que el source si lea acentos y caracteres raros
l <- readLines(f, encoding=encoding)
eval(parse(text=l),envir=.GlobalEnv)
}
source("Codigos/Revision negocios caso especifico en que tasas descto menor a CI.R")
# BBVA Competencia Camaras (ult. act 23 julio 2020)
# Facturacion de negocios riesgosos dentro del total
gc()
library(tidyverse)
library(readxl)
library(xlsx)
library(scales)
##### Lectura de bases de datos #####
source <- function(f, encoding = 'UTF-8') { # Para que el source si lea acentos y caracteres raros
l <- readLines(f, encoding=encoding)
eval(parse(text=l),envir=.GlobalEnv)
}
source("Codigos/Revision negocios caso especifico en que tasas descto menor a CI.R")
rm(list=setdiff(ls(), c('Comparacion_CI', 'a', 'b'))
rm(list=setdiff(ls(), c('Comparacion_CI', 'a', 'b')))
Fact_riesgo <- read_excel("Inputs/Transaccionalidad_comercios_v2.xlsx",
sheet = "VentasxComercio", skip = 3) %>%
rename(AJE_CRED_TXS = TXNS...5, AJE_CRED_VAL = MONTO...6,
PRO_CRED_TXS = TXNS...7, PRO_CRED_VAL = MONTO...8,
AJE_DEB_TXS = TXNS...9, AJE_DEB_VAL = MONTO...10,
PRO_DEB_TXS = TXNS...11, PRO_DEB_VAL = MONTO...12)
Total_liquidacion <- read_excel("Inputs/Total_liquidacion.xlsx", sheet = "Total", skip = 4) %>%
rename(AJE_CRED_TXS_TOT = TXNS...1, AJE_CRED_VAL_TOT = MONTO...2,
AJE_DEB_TXS_TOT = TXNS...5, AJE_DEB_VAL_TOT = MONTO...6)
##### Procesamiento de bases de datos para union #####
Fact_riesgo_proc <- Fact_riesgo %>%
select(AFILIACION, GRUPO, CADENA, `RAZON SOCIAL`, AJE_CRED_VAL, AJE_DEB_VAL)
CompCI_proc <- Comparacion_CI %>%
select(AFILIACION, GRUPO, CADENA, `RAZON SOCIAL`, GIRO, Comp_CI_cred, Comp_CI_deb2)
##### Union #####
Unida <- Fact_riesgo_proc %>%
left_join(CompCI_proc) %>%
filter(!is.na(Comp_CI_cred))
##### Facturacion como % del total credito y debito #####
Fact_cred <- Unida %>%
filter(Comp_CI_cred == 'TD menor a CI')
percent <- function(x, digits = 2, format = "f", ...) {      # Create user-defined function
paste0(formatC(x * 100, format = format, digits = digits, ...), "%")
}
print(str_c('La facturacion para negocios en riesgo representa el: ',
percent(sum(Fact_cred$AJE_CRED_VAL)/Total_liquidacion$AJE_CRED_VAL_TOT),
' del total de facturacion en credito ajena'))
Fact_deb <- Unida %>%
filter(Comp_CI_deb2 == 'TD menor a CI')
print(str_c('La facturacion para negocios en riesgo representa el: ',
percent(sum(Fact_deb$AJE_DEB_VAL)/Total_liquidacion$AJE_DEB_VAL_TOT),
' del total de facturacion en debito ajena'))
View(Fact_cred)
View(Fact_riesgo_proc)
Cred_falt <- a %>%
left_join(Fact_riesgo_proc)
View(Cred_falt)
Cred_falt <- a %>%
left_join(Fact_riesgo_proc) %>%
filter(is.na(AJE_CRED_VAL))
View(Cred_falt)
Cred_falt <- a %>%
left_join(Fact_riesgo_proc) %>%
filter(is.na(AJE_CRED_VAL)) %>% select(-AJE_CRED_VAL, -AJE_DEB_VAL) %>%
distinct()
View(Cred_falt)
View(b)
Deb_falt <- b %>%
left_join(Fact_riesgo_proc) %>%
filter(is.na(AJE_DEB_VAL)) %>% select(-AJE_CRED_VAL, -AJE_DEB_VAL) %>%
distinct()
View(Deb_falt)
rm(a, b)
# BBVA Competencia Camaras (ult. act 23 julio 2020)
# Facturacion de negocios riesgosos dentro del total
gc()
library(tidyverse)
library(readxl)
library(xlsx)
library(scales)
##### Lectura de bases de datos #####
source <- function(f, encoding = 'UTF-8') { # Para que el source si lea acentos y caracteres raros
l <- readLines(f, encoding=encoding)
eval(parse(text=l),envir=.GlobalEnv)
}
source("Codigos/Revision negocios caso especifico en que tasas descto menor a CI.R")
rm(list=setdiff(ls(), c('Comparacion_CI', 'a', 'b')))
Fact_riesgo <- read_excel("Inputs/Transaccionalidad_comercios_v2.xlsx",
sheet = "VentasxComercio", skip = 3) %>%
rename(AJE_CRED_TXS = TXNS...5, AJE_CRED_VAL = MONTO...6,
PRO_CRED_TXS = TXNS...7, PRO_CRED_VAL = MONTO...8,
AJE_DEB_TXS = TXNS...9, AJE_DEB_VAL = MONTO...10,
PRO_DEB_TXS = TXNS...11, PRO_DEB_VAL = MONTO...12)
Total_liquidacion <- read_excel("Inputs/Total_liquidacion.xlsx", sheet = "Total", skip = 4) %>%
rename(AJE_CRED_TXS_TOT = TXNS...1, AJE_CRED_VAL_TOT = MONTO...2,
AJE_DEB_TXS_TOT = TXNS...5, AJE_DEB_VAL_TOT = MONTO...6)
##### Procesamiento de bases de datos para union #####
Fact_riesgo_proc <- Fact_riesgo %>%
select(AFILIACION, GRUPO, CADENA, `RAZON SOCIAL`, AJE_CRED_VAL, AJE_DEB_VAL)
CompCI_proc <- Comparacion_CI %>%
select(AFILIACION, GRUPO, CADENA, `RAZON SOCIAL`, GIRO, Comp_CI_cred, Comp_CI_deb2)
##### Union #####
Unida <- Fact_riesgo_proc %>%
left_join(CompCI_proc) %>%
filter(!is.na(Comp_CI_cred))
##### Facturacion como % del total credito y debito #####
Fact_cred <- Unida %>%
filter(Comp_CI_cred == 'TD menor a CI')
percent <- function(x, digits = 2, format = "f", ...) {      # Create user-defined function
paste0(formatC(x * 100, format = format, digits = digits, ...), "%")
}
print(str_c('La facturacion para negocios en riesgo representa el: ',
percent(sum(Fact_cred$AJE_CRED_VAL)/Total_liquidacion$AJE_CRED_VAL_TOT),
' del total de facturacion en credito ajena'))
Fact_deb <- Unida %>%
filter(Comp_CI_deb2 == 'TD menor a CI')
print(str_c('La facturacion para negocios en riesgo representa el: ',
percent(sum(Fact_deb$AJE_DEB_VAL)/Total_liquidacion$AJE_DEB_VAL_TOT),
' del total de facturacion en debito ajena'))
##### Negocios que faltaron #####
Cred_falt <- a %>%
left_join(Fact_riesgo_proc) %>%
filter(is.na(AJE_CRED_VAL)) %>% select(-AJE_CRED_VAL, -AJE_DEB_VAL) %>%
distinct()
Deb_falt <- b %>%
left_join(Fact_riesgo_proc) %>%
filter(is.na(AJE_DEB_VAL)) %>% select(-AJE_CRED_VAL, -AJE_DEB_VAL) %>%
distinct()
rm(a, b)
View(Unida)
View(Cred_falt)
View(Deb_falt)
View(Fact_cred)
View(Fact_deb)
Fact_tot <- Unida %>%
filter(Comp_CI_cred == 'TD menor a CI' | Comp_CI_deb2 == 'TD menor a CI')
View(Fact_tot)
Fact_tot <- Unida %>%
filter(Comp_CI_cred == 'TD menor a CI', Comp_CI_deb2 == 'TD menor a CI')
Fact_tot <- Unida %>%
filter(Comp_CI_cred == 'TD menor a CI' | Comp_CI_deb2 == 'TD menor a CI')
Fact_tot <- Unida %>%
filter(Comp_CI_cred == 'TD menor a CI' | Comp_CI_deb2 == 'TD menor a CI') %>%
mutate(Ind_cred = ifelse(Comp_CI_cred == 'TD menor a CI', 1, 0),
Ind_deb = ifelse(Comp_CI_deb2 == 'TD menor a CI', 1, 0))
View(Fact_tot)
Fact_tot <- Unida %>%
filter(Comp_CI_cred == 'TD menor a CI' | Comp_CI_deb2 == 'TD menor a CI') %>%
mutate(Ind_cred = ifelse(Comp_CI_cred == 'TD menor a CI', 1, 0),
Ind_deb = ifelse(Comp_CI_deb2 == 'TD menor a CI', 1, 0)) %>%
group_by(Ind_cred, Ind_deb) %>%
summarise(AJE_CRED = sum(AJE_CRED_VAL), AJE_DEB = sum(AJE_DEB_VAL))
View(Fact_tot)
Fact_tot <- Unida %>%
filter(Comp_CI_cred == 'TD menor a CI' | Comp_CI_deb2 == 'TD menor a CI') %>%
mutate(Ind_cred = ifelse(Comp_CI_cred == 'TD menor a CI', 1, 0),
Ind_deb = ifelse(Comp_CI_deb2 == 'TD menor a CI', 1, 0)) %>%
group_by(Ind_cred, Ind_deb) %>%
summarise(AJE_CRED = sum(AJE_CRED_VAL), AJE_DEB = sum(AJE_DEB_VAL)) %>%
group_by(Ind_cred) %>% mutate(AJE_CRED_RISK = sum(AJE_CRED))
Fact_tot <- Unida %>%
filter(Comp_CI_cred == 'TD menor a CI' | Comp_CI_deb2 == 'TD menor a CI') %>%
mutate(Ind_cred = ifelse(Comp_CI_cred == 'TD menor a CI', 1, 0),
Ind_deb = ifelse(Comp_CI_deb2 == 'TD menor a CI', 1, 0)) %>%
group_by(Ind_cred, Ind_deb) %>%
summarise(AJE_CRED = sum(AJE_CRED_VAL), AJE_DEB = sum(AJE_DEB_VAL)) %>%
group_by(Ind_cred) %>% mutate(AJE_CRED_RISK = sum(AJE_CRED)) %>% ungroup() %>%
group_by(Ind_deb) %>% mutate(AJE_DEB_RISK = sum(AJE_DEB)) %>% ungroup()
Fact_tot <- Unida %>%
filter(Comp_CI_cred == 'TD menor a CI' | Comp_CI_deb2 == 'TD menor a CI') %>%
mutate(Ind_cred = ifelse(Comp_CI_cred == 'TD menor a CI', 1, 0),
Ind_deb = ifelse(Comp_CI_deb2 == 'TD menor a CI', 1, 0)) %>%
group_by(Ind_cred, Ind_deb) %>%
summarise(AJE_CRED = sum(AJE_CRED_VAL), AJE_DEB = sum(AJE_DEB_VAL)) %>%
group_by(Ind_cred) %>% mutate(AJE_CRED_RISK = sum(AJE_CRED)) %>% ungroup() %>%
group_by(Ind_deb) %>% mutate(AJE_DEB_RISK = sum(AJE_DEB)) %>% ungroup() %>%
filter(Ind_cred == 1, Ind_deb == 1)
Fact_tot <- Unida %>%
filter(Comp_CI_cred == 'TD menor a CI' | Comp_CI_deb2 == 'TD menor a CI') %>%
mutate(Ind_cred = ifelse(Comp_CI_cred == 'TD menor a CI', 1, 0),
Ind_deb = ifelse(Comp_CI_deb2 == 'TD menor a CI', 1, 0)) %>%
group_by(Ind_cred, Ind_deb) %>%
summarise(AJE_CRED = sum(AJE_CRED_VAL), AJE_DEB = sum(AJE_DEB_VAL)) %>%
group_by(Ind_cred) %>% mutate(AJE_CRED_RISK = sum(AJE_CRED)) %>% ungroup() %>%
group_by(Ind_deb) %>% mutate(AJE_DEB_RISK = sum(AJE_DEB)) %>% ungroup() %>%
filter(Ind_cred == 1 | Ind_deb == 1)
Fact_tot <- Unida %>%
filter(Comp_CI_cred == 'TD menor a CI' | Comp_CI_deb2 == 'TD menor a CI') %>%
mutate(Ind_cred = ifelse(Comp_CI_cred == 'TD menor a CI', 1, 0),
Ind_deb = ifelse(Comp_CI_deb2 == 'TD menor a CI', 1, 0)) %>%
group_by(Ind_cred, Ind_deb) %>%
summarise(AJE_CRED = sum(AJE_CRED_VAL), AJE_DEB = sum(AJE_DEB_VAL)) %>%
group_by(Ind_cred) %>% mutate(AJE_CRED_RISK = sum(AJE_CRED)) %>% ungroup() %>%
group_by(Ind_deb) %>% mutate(AJE_DEB_RISK = sum(AJE_DEB)) %>% ungroup() %>%
filter(Ind_cred == 1, Ind_deb == 1)
Fact_tot <- Unida %>%
filter(Comp_CI_cred == 'TD menor a CI' | Comp_CI_deb2 == 'TD menor a CI') %>%
mutate(Ind_cred = ifelse(Comp_CI_cred == 'TD menor a CI', 1, 0),
Ind_deb = ifelse(Comp_CI_deb2 == 'TD menor a CI', 1, 0)) %>%
group_by(Ind_cred, Ind_deb) %>%
summarise(AJE_CRED = sum(AJE_CRED_VAL), AJE_DEB = sum(AJE_DEB_VAL)) %>%
group_by(Ind_cred) %>% mutate(AJE_CRED_RISK = sum(AJE_CRED)) %>% ungroup() %>%
group_by(Ind_deb) %>% mutate(AJE_DEB_RISK = sum(AJE_DEB)) %>% ungroup() %>%
filter(Ind_cred == 1, Ind_deb == 1) %>%
select(-Ind_cred, -Ind_deb)
View(Total_liquidacion)
print(str_c(
'La facturacion para negocios en riesgo representa el: ',
percent(
(Fact_tot$AJE_CRED_RISK + Fact_tot$AJE_DEB_RISK) / (
Total_liquidacion$AJE_CRED_VAL_TOT + Total_liquidacion$AJE_DEB_VAL_TOT),
' del total de facturacion total ajena')))
print(str_c(
'La facturacion para negocios en riesgo representa el: ',
percent(
(Fact_tot$AJE_CRED_RISK + Fact_tot$AJE_DEB_RISK) / (
Total_liquidacion$AJE_CRED_VAL_TOT + Total_liquidacion$AJE_DEB_VAL_TOT)),
' del total de facturacion total ajena'))
# BBVA Competencia Camaras (ult. act 23 julio 2020)
# Facturacion de negocios riesgosos dentro del total
gc()
library(tidyverse)
library(readxl)
library(xlsx)
library(scales)
##### Lectura de bases de datos #####
source <- function(f, encoding = 'UTF-8') { # Para que el source si lea acentos y caracteres raros
l <- readLines(f, encoding=encoding)
eval(parse(text=l),envir=.GlobalEnv)
}
source("Codigos/Revision negocios caso especifico en que tasas descto menor a CI.R")
rm(list=setdiff(ls(), c('Comparacion_CI', 'a', 'b')))
Fact_riesgo <- read_excel("Inputs/Transaccionalidad_comercios_v2.xlsx",
sheet = "VentasxComercio", skip = 3) %>%
rename(AJE_CRED_TXS = TXNS...5, AJE_CRED_VAL = MONTO...6,
PRO_CRED_TXS = TXNS...7, PRO_CRED_VAL = MONTO...8,
AJE_DEB_TXS = TXNS...9, AJE_DEB_VAL = MONTO...10,
PRO_DEB_TXS = TXNS...11, PRO_DEB_VAL = MONTO...12)
Total_liquidacion <- read_excel("Inputs/Total_liquidacion.xlsx", sheet = "Total", skip = 4) %>%
rename(AJE_CRED_TXS_TOT = TXNS...1, AJE_CRED_VAL_TOT = MONTO...2,
AJE_DEB_TXS_TOT = TXNS...5, AJE_DEB_VAL_TOT = MONTO...6)
##### Procesamiento de bases de datos para union #####
Fact_riesgo_proc <- Fact_riesgo %>%
select(AFILIACION, GRUPO, CADENA, `RAZON SOCIAL`, AJE_CRED_VAL, AJE_DEB_VAL)
CompCI_proc <- Comparacion_CI %>%
select(AFILIACION, GRUPO, CADENA, `RAZON SOCIAL`, GIRO, Comp_CI_cred, Comp_CI_deb2)
##### Union #####
Unida <- Fact_riesgo_proc %>%
left_join(CompCI_proc) %>%
filter(!is.na(Comp_CI_cred))
##### Facturacion como % del total credito y debito #####
Fact_cred <- Unida %>%
filter(Comp_CI_cred == 'TD menor a CI')
percent <- function(x, digits = 2, format = "f", ...) {      # Create user-defined function
paste0(formatC(x * 100, format = format, digits = digits, ...), "%")
}
print(str_c('La facturacion para negocios en riesgo representa el: ',
percent(sum(Fact_cred$AJE_CRED_VAL)/Total_liquidacion$AJE_CRED_VAL_TOT),
' del total de facturacion en credito ajena'))
Fact_deb <- Unida %>%
filter(Comp_CI_deb2 == 'TD menor a CI')
print(str_c('La facturacion para negocios en riesgo representa el: ',
percent(sum(Fact_deb$AJE_DEB_VAL)/Total_liquidacion$AJE_DEB_VAL_TOT),
' del total de facturacion en debito ajena'))
Fact_tot <- Unida %>%
filter(Comp_CI_cred == 'TD menor a CI' | Comp_CI_deb2 == 'TD menor a CI') %>%
mutate(Ind_cred = ifelse(Comp_CI_cred == 'TD menor a CI', 1, 0),
Ind_deb = ifelse(Comp_CI_deb2 == 'TD menor a CI', 1, 0)) %>%
group_by(Ind_cred, Ind_deb) %>%
summarise(AJE_CRED = sum(AJE_CRED_VAL), AJE_DEB = sum(AJE_DEB_VAL)) %>%
group_by(Ind_cred) %>% mutate(AJE_CRED_RISK = sum(AJE_CRED)) %>% ungroup() %>%
group_by(Ind_deb) %>% mutate(AJE_DEB_RISK = sum(AJE_DEB)) %>% ungroup() %>%
filter(Ind_cred == 1, Ind_deb == 1) %>%
select(-Ind_cred, -Ind_deb)
print(str_c(
'La facturacion para negocios en riesgo representa el: ',
percent(
(Fact_tot$AJE_CRED_RISK + Fact_tot$AJE_DEB_RISK) / (
Total_liquidacion$AJE_CRED_VAL_TOT + Total_liquidacion$AJE_DEB_VAL_TOT)),
' del total de facturacion total ajena'))
##### Negocios que faltaron #####
Cred_falt <- a %>%
left_join(Fact_riesgo_proc) %>%
filter(is.na(AJE_CRED_VAL)) %>% select(-AJE_CRED_VAL, -AJE_DEB_VAL) %>%
distinct()
Deb_falt <- b %>%
left_join(Fact_riesgo_proc) %>%
filter(is.na(AJE_DEB_VAL)) %>% select(-AJE_CRED_VAL, -AJE_DEB_VAL) %>%
distinct()
rm(a, b)
Tot_falt <- Cred_falt %>%
bind_rows(Deb_falt)
View(Tot_falt)
Tot_falt <- Cred_falt %>%
bind_rows(Deb_falt) %>%
distinct()
View(Tot_falt)
write.xlsx2(as.data.frame(Tot_falt), "Outputs/Negocios en riesgo sin facturacion enviada.xlsx",
sheetName = "Lista_completa", row.names = F, append = F)
write.xlsx2(as.data.frame(Cred_falt), "Outputs/Negocios en riesgo sin facturacion enviada.xlsx",
sheetName = "Credito", row.names = F, append = T)
write.xlsx2(as.data.frame(Deb_falt), "Outputs/Negocios en riesgo sin facturacion enviada.xlsx",
sheetName = "Debito", row.names = F, append = T)
# BBVA Competencia Camaras (ult. act 23 julio 2020)
# Facturacion de negocios riesgosos dentro del total
gc()
library(tidyverse)
library(readxl)
library(xlsx)
library(scales)
##### Lectura de bases de datos #####
source <- function(f, encoding = 'UTF-8') { # Para que el source si lea acentos y caracteres raros
l <- readLines(f, encoding=encoding)
eval(parse(text=l),envir=.GlobalEnv)
}
source("Codigos/Revision negocios caso especifico en que tasas descto menor a CI.R")
rm(list=setdiff(ls(), c('Comparacion_CI', 'a', 'b')))
Fact_riesgo <- read_excel("Inputs/Transaccionalidad_comercios_v2.xlsx",
sheet = "VentasxComercio", skip = 3) %>%
rename(AJE_CRED_TXS = TXNS...5, AJE_CRED_VAL = MONTO...6,
PRO_CRED_TXS = TXNS...7, PRO_CRED_VAL = MONTO...8,
AJE_DEB_TXS = TXNS...9, AJE_DEB_VAL = MONTO...10,
PRO_DEB_TXS = TXNS...11, PRO_DEB_VAL = MONTO...12)
Total_liquidacion <- read_excel("Inputs/Total_liquidacion.xlsx", sheet = "Total", skip = 4) %>%
rename(AJE_CRED_TXS_TOT = TXNS...1, AJE_CRED_VAL_TOT = MONTO...2,
AJE_DEB_TXS_TOT = TXNS...5, AJE_DEB_VAL_TOT = MONTO...6)
##### Procesamiento de bases de datos para union #####
Fact_riesgo_proc <- Fact_riesgo %>%
select(AFILIACION, GRUPO, CADENA, `RAZON SOCIAL`, AJE_CRED_VAL, AJE_DEB_VAL)
CompCI_proc <- Comparacion_CI %>%
select(AFILIACION, GRUPO, CADENA, `RAZON SOCIAL`, GIRO, Comp_CI_cred, Comp_CI_deb2)
##### Union #####
Unida <- Fact_riesgo_proc %>%
left_join(CompCI_proc) %>%
filter(!is.na(Comp_CI_cred))
##### Facturacion como % del total credito y debito #####
Fact_cred <- Unida %>%
filter(Comp_CI_cred == 'TD menor a CI')
percent <- function(x, digits = 2, format = "f", ...) {      # Create user-defined function
paste0(formatC(x * 100, format = format, digits = digits, ...), "%")
}
print(str_c('La facturacion para negocios en riesgo representa el: ',
percent(sum(Fact_cred$AJE_CRED_VAL)/Total_liquidacion$AJE_CRED_VAL_TOT),
' del total de facturacion en credito ajena'))
Fact_deb <- Unida %>%
filter(Comp_CI_deb2 == 'TD menor a CI')
print(str_c('La facturacion para negocios en riesgo representa el: ',
percent(sum(Fact_deb$AJE_DEB_VAL)/Total_liquidacion$AJE_DEB_VAL_TOT),
' del total de facturacion en debito ajena'))
Fact_tot <- Unida %>%
filter(Comp_CI_cred == 'TD menor a CI' | Comp_CI_deb2 == 'TD menor a CI') %>%
mutate(Ind_cred = ifelse(Comp_CI_cred == 'TD menor a CI', 1, 0),
Ind_deb = ifelse(Comp_CI_deb2 == 'TD menor a CI', 1, 0)) %>%
group_by(Ind_cred, Ind_deb) %>%
summarise(AJE_CRED = sum(AJE_CRED_VAL), AJE_DEB = sum(AJE_DEB_VAL)) %>%
group_by(Ind_cred) %>% mutate(AJE_CRED_RISK = sum(AJE_CRED)) %>% ungroup() %>%
group_by(Ind_deb) %>% mutate(AJE_DEB_RISK = sum(AJE_DEB)) %>% ungroup() %>%
filter(Ind_cred == 1, Ind_deb == 1) %>%
select(-Ind_cred, -Ind_deb)
print(str_c(
'La facturacion para negocios en riesgo representa el: ',
percent(
(Fact_tot$AJE_CRED_RISK + Fact_tot$AJE_DEB_RISK) / (
Total_liquidacion$AJE_CRED_VAL_TOT + Total_liquidacion$AJE_DEB_VAL_TOT)),
' del total de facturacion total ajena'))
##### Negocios que faltaron #####
Cred_falt <- a %>%
left_join(Fact_riesgo_proc) %>%
filter(is.na(AJE_CRED_VAL)) %>% select(-AJE_CRED_VAL, -AJE_DEB_VAL) %>%
distinct()
Deb_falt <- b %>%
left_join(Fact_riesgo_proc) %>%
filter(is.na(AJE_DEB_VAL)) %>% select(-AJE_CRED_VAL, -AJE_DEB_VAL) %>%
distinct()
rm(a, b)
Tot_falt <- Cred_falt %>%
bind_rows(Deb_falt) %>%
distinct()
write.xlsx2(as.data.frame(Tot_falt), "Outputs/Negocios en riesgo sin facturacion enviada.xlsx",
sheetName = "Lista_completa", row.names = F, append = F)
write.xlsx2(as.data.frame(Cred_falt), "Outputs/Negocios en riesgo sin facturacion enviada.xlsx",
sheetName = "Credito", row.names = F, append = T)
write.xlsx2(as.data.frame(Deb_falt), "Outputs/Negocios en riesgo sin facturacion enviada.xlsx",
sheetName = "Debito", row.names = F, append = T)
